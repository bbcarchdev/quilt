FROM debian:wheezy
MAINTAINER Simeon van der Steen <simeon.vandersteen@bbc.co.uk>

# Add bbcarchdev apt repo
ENV DEBIAN_FRONTEND noninteractive
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 9E16A4D302DA096A && \
	echo "deb [arch=amd64] http://apt.bbcarchdev.net/debian/ wheezy main ports live stage dev" \
	>> /etc/apt/sources.list.d/bbcarchdev-wheezy.list


# Install everything needed to compile and run Quilt
RUN apt-get -y update && apt-get install -y --no-install-recommends \
	netcat netcat-traditional vim build-essential \
	autoconf automake libtool libcurl4-gnutls-dev librdf0-dev liburi-dev \
	libsparqlclient-dev libltdl-dev libfcgi-dev libjansson-dev \
	libsparqlclient libjansson4 liburi libsparqlclient-dev libjansson-dev \
	liburi-dev libfcgi0ldbl apache2 libapache2-mod-fcgid \
	&& rm -rf /var/lib/apt/lists/*

RUN apt-get -y update && apt-get install -y --no-install-recommends \
	libtwine-dev quilt-templates-res libawsclient-dev libcunit1-ncurses-dev \
	&& rm -rf /var/lib/apt/lists/*

	
# Compile and install Quilt
COPY quilt /usr/local/src/quilt
WORKDIR /usr/local/src/quilt
RUN autoreconf -i && \
	./configure --prefix=/usr --enable-debug && \
	make && make install

# Compile and install Spindle
COPY spindle /usr/local/src/spindle
WORKDIR /usr/local/src/spindle
RUN autoreconf -i && \
	./configure --prefix=/usr --enable-debug && \
	make && \
	make install

WORKDIR /usr/local/src/quilt

# Link the config file to its actual usage location
RUN rm -f /usr/etc/quilt.conf
RUN ln -s /usr/local/src/quilt/docker/quilt.conf /usr/etc/quilt.conf
RUN rm -f /etc/quilt.conf
RUN ln -s /usr/local/src/quilt/docker/quilt.conf /etc/quilt.conf

# Link the FCGI script
RUN ln -s /usr/sbin/quilt-fcgid /usr/share/quilt-templates-res/public/index.fcgi

# Configure apache
ENV APACHE_RUN_USER	www-data
ENV APACHE_RUN_GROUP	www-data
ENV APACHE_LOG_DIR	/var/log/apache2
ENV APACHE_PID_FILE	/var/run/apache2.pid
ENV APACHE_RUN_DIR	/var/run/apache2
ENV APACHE_LOCK_DIR	/var/lock/apache2

RUN a2enmod rewrite
RUN mkdir /var/run/apache2
RUN cp docker/apache2.conf /etc/apache2/sites-available/quilt
RUN a2dissite 000-default && a2ensite quilt
RUN	ln -sf /dev/stdout /var/log/apache2/quilt.access.log && \
	ln -sf /dev/stderr /var/log/apache2/error.log

EXPOSE 80

#Â Copy the run script for the configuration
RUN cp docker/run.sh /
ENTRYPOINT [ "/run.sh" ]

# Define mount points and working directory, also used for static files
VOLUME ["/data"]
WORKDIR /data

# Launch Apache
CMD ["/usr/sbin/apache2", "-DFOREGROUND"]